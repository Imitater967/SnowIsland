//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/SnowIsland/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MyPlayerInputAsset: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MyPlayerInputAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""9df039fe-4566-4997-8185-6a95a4c433d9"",
            ""actions"": [
                {
                    ""name"": ""Motion"",
                    ""type"": ""Value"",
                    ""id"": ""4cd3456b-fa6e-4b2d-a452-cea23517c1ab"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HideName"",
                    ""type"": ""Button"",
                    ""id"": ""b0c8e4cc-e9af-441b-aba0-6530c11a7464"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""2e63a65d-6417-4bba-8ff9-df8794f147e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CrawlTstOnly"",
                    ""type"": ""Button"",
                    ""id"": ""43dd7c66-4ab5-41c1-aaeb-9a02dcd086ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Split"",
                    ""type"": ""Button"",
                    ""id"": ""cb477dca-4ad9-4cb8-916c-a6fcba1f0c20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""7ab6f0db-f622-4023-a78c-4a31571967ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarSelect"",
                    ""type"": ""Button"",
                    ""id"": ""064a9821-c9f0-4e7b-992c-dd13543a0745"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InteractSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""d40a263f-2cd9-4206-a25d-dae96d5e14c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractPerform"",
                    ""type"": ""Button"",
                    ""id"": ""a764d68d-5c9f-4d20-81ed-732df99a7530"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopInteract"",
                    ""type"": ""Button"",
                    ""id"": ""4ee92619-4634-4238-879f-6d7cf967851a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""384c75a9-811e-4255-bf8f-0c99b33dd861"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""93b49381-9ae2-46b7-b9eb-bc7e5b4f126f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""a370acf1-adfd-4fbb-adfd-6f6fe757ba2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimPos"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d321fd5c-7630-4df1-b120-2b184bd4bc2e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6188a849-3e47-439f-afa3-d74bd3f70b03"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Motion"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d484af91-427b-478f-82e7-33a6aa12058c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0dbb6b06-769a-4c08-9197-15da638db824"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1a45750e-54fe-4f5d-8362-8b2f29619620"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ba34a136-889c-4b25-8d5d-831057f53d7f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Motion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""838cf18d-32af-4ffb-a7b2-0e77f25b0650"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideName"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67c71813-4cd0-4df1-ab3b-b46a832e6db1"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f3e128b-8c01-4bbc-bd67-62f09e42e24c"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CrawlTstOnly"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec6c4a51-fb94-42ed-9db0-c9c2c187b815"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Split"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56087d92-e030-4e40-9223-7d2d8d91e4de"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acec7cc0-60c2-4952-a269-3a112c275384"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""HotbarSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88ca6fd5-2cb5-486e-856a-42f26b08c2e8"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""HotbarSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""469b938e-bb8a-4102-b9df-0954d70cb88a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""HotbarSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a0c2f54-7fdc-4a6b-b5aa-3b776efe7430"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""HotbarSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6100ddb7-45c9-4191-a3f3-3a0b6ef2825f"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""HotbarSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73c97a53-7942-4823-aea9-f12b6972b0db"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b49608e-98ec-469f-9179-a4355a249d14"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractPerform"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62e0268a-fd0d-4a11-9a7d-f94e252f3d78"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StopInteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4702af82-c399-4485-b1f7-79ed5e175414"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""415209da-6cc5-42ff-8ebb-2aeeb210ffe9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""104b0b9d-d4c4-4ca0-bfcc-9f95828ec76c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a896bd3-e17b-4b4c-96ad-5132b91aaecb"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimPos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // InGame
        m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
        m_InGame_Motion = m_InGame.FindAction("Motion", throwIfNotFound: true);
        m_InGame_HideName = m_InGame.FindAction("HideName", throwIfNotFound: true);
        m_InGame_Run = m_InGame.FindAction("Run", throwIfNotFound: true);
        m_InGame_CrawlTstOnly = m_InGame.FindAction("CrawlTstOnly", throwIfNotFound: true);
        m_InGame_Split = m_InGame.FindAction("Split", throwIfNotFound: true);
        m_InGame_Drop = m_InGame.FindAction("Drop", throwIfNotFound: true);
        m_InGame_HotbarSelect = m_InGame.FindAction("HotbarSelect", throwIfNotFound: true);
        m_InGame_InteractSwitch = m_InGame.FindAction("InteractSwitch", throwIfNotFound: true);
        m_InGame_InteractPerform = m_InGame.FindAction("InteractPerform", throwIfNotFound: true);
        m_InGame_StopInteract = m_InGame.FindAction("StopInteract", throwIfNotFound: true);
        m_InGame_Use = m_InGame.FindAction("Use", throwIfNotFound: true);
        m_InGame_Aim = m_InGame.FindAction("Aim", throwIfNotFound: true);
        m_InGame_Fire = m_InGame.FindAction("Fire", throwIfNotFound: true);
        m_InGame_AimPos = m_InGame.FindAction("AimPos", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InGame
    private readonly InputActionMap m_InGame;
    private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
    private readonly InputAction m_InGame_Motion;
    private readonly InputAction m_InGame_HideName;
    private readonly InputAction m_InGame_Run;
    private readonly InputAction m_InGame_CrawlTstOnly;
    private readonly InputAction m_InGame_Split;
    private readonly InputAction m_InGame_Drop;
    private readonly InputAction m_InGame_HotbarSelect;
    private readonly InputAction m_InGame_InteractSwitch;
    private readonly InputAction m_InGame_InteractPerform;
    private readonly InputAction m_InGame_StopInteract;
    private readonly InputAction m_InGame_Use;
    private readonly InputAction m_InGame_Aim;
    private readonly InputAction m_InGame_Fire;
    private readonly InputAction m_InGame_AimPos;
    public struct InGameActions
    {
        private @MyPlayerInputAsset m_Wrapper;
        public InGameActions(@MyPlayerInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Motion => m_Wrapper.m_InGame_Motion;
        public InputAction @HideName => m_Wrapper.m_InGame_HideName;
        public InputAction @Run => m_Wrapper.m_InGame_Run;
        public InputAction @CrawlTstOnly => m_Wrapper.m_InGame_CrawlTstOnly;
        public InputAction @Split => m_Wrapper.m_InGame_Split;
        public InputAction @Drop => m_Wrapper.m_InGame_Drop;
        public InputAction @HotbarSelect => m_Wrapper.m_InGame_HotbarSelect;
        public InputAction @InteractSwitch => m_Wrapper.m_InGame_InteractSwitch;
        public InputAction @InteractPerform => m_Wrapper.m_InGame_InteractPerform;
        public InputAction @StopInteract => m_Wrapper.m_InGame_StopInteract;
        public InputAction @Use => m_Wrapper.m_InGame_Use;
        public InputAction @Aim => m_Wrapper.m_InGame_Aim;
        public InputAction @Fire => m_Wrapper.m_InGame_Fire;
        public InputAction @AimPos => m_Wrapper.m_InGame_AimPos;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void AddCallbacks(IInGameActions instance)
        {
            if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
            @Motion.started += instance.OnMotion;
            @Motion.performed += instance.OnMotion;
            @Motion.canceled += instance.OnMotion;
            @HideName.started += instance.OnHideName;
            @HideName.performed += instance.OnHideName;
            @HideName.canceled += instance.OnHideName;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @CrawlTstOnly.started += instance.OnCrawlTstOnly;
            @CrawlTstOnly.performed += instance.OnCrawlTstOnly;
            @CrawlTstOnly.canceled += instance.OnCrawlTstOnly;
            @Split.started += instance.OnSplit;
            @Split.performed += instance.OnSplit;
            @Split.canceled += instance.OnSplit;
            @Drop.started += instance.OnDrop;
            @Drop.performed += instance.OnDrop;
            @Drop.canceled += instance.OnDrop;
            @HotbarSelect.started += instance.OnHotbarSelect;
            @HotbarSelect.performed += instance.OnHotbarSelect;
            @HotbarSelect.canceled += instance.OnHotbarSelect;
            @InteractSwitch.started += instance.OnInteractSwitch;
            @InteractSwitch.performed += instance.OnInteractSwitch;
            @InteractSwitch.canceled += instance.OnInteractSwitch;
            @InteractPerform.started += instance.OnInteractPerform;
            @InteractPerform.performed += instance.OnInteractPerform;
            @InteractPerform.canceled += instance.OnInteractPerform;
            @StopInteract.started += instance.OnStopInteract;
            @StopInteract.performed += instance.OnStopInteract;
            @StopInteract.canceled += instance.OnStopInteract;
            @Use.started += instance.OnUse;
            @Use.performed += instance.OnUse;
            @Use.canceled += instance.OnUse;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @AimPos.started += instance.OnAimPos;
            @AimPos.performed += instance.OnAimPos;
            @AimPos.canceled += instance.OnAimPos;
        }

        private void UnregisterCallbacks(IInGameActions instance)
        {
            @Motion.started -= instance.OnMotion;
            @Motion.performed -= instance.OnMotion;
            @Motion.canceled -= instance.OnMotion;
            @HideName.started -= instance.OnHideName;
            @HideName.performed -= instance.OnHideName;
            @HideName.canceled -= instance.OnHideName;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @CrawlTstOnly.started -= instance.OnCrawlTstOnly;
            @CrawlTstOnly.performed -= instance.OnCrawlTstOnly;
            @CrawlTstOnly.canceled -= instance.OnCrawlTstOnly;
            @Split.started -= instance.OnSplit;
            @Split.performed -= instance.OnSplit;
            @Split.canceled -= instance.OnSplit;
            @Drop.started -= instance.OnDrop;
            @Drop.performed -= instance.OnDrop;
            @Drop.canceled -= instance.OnDrop;
            @HotbarSelect.started -= instance.OnHotbarSelect;
            @HotbarSelect.performed -= instance.OnHotbarSelect;
            @HotbarSelect.canceled -= instance.OnHotbarSelect;
            @InteractSwitch.started -= instance.OnInteractSwitch;
            @InteractSwitch.performed -= instance.OnInteractSwitch;
            @InteractSwitch.canceled -= instance.OnInteractSwitch;
            @InteractPerform.started -= instance.OnInteractPerform;
            @InteractPerform.performed -= instance.OnInteractPerform;
            @InteractPerform.canceled -= instance.OnInteractPerform;
            @StopInteract.started -= instance.OnStopInteract;
            @StopInteract.performed -= instance.OnStopInteract;
            @StopInteract.canceled -= instance.OnStopInteract;
            @Use.started -= instance.OnUse;
            @Use.performed -= instance.OnUse;
            @Use.canceled -= instance.OnUse;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @AimPos.started -= instance.OnAimPos;
            @AimPos.performed -= instance.OnAimPos;
            @AimPos.canceled -= instance.OnAimPos;
        }

        public void RemoveCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInGameActions instance)
        {
            foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InGameActions @InGame => new InGameActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IInGameActions
    {
        void OnMotion(InputAction.CallbackContext context);
        void OnHideName(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrawlTstOnly(InputAction.CallbackContext context);
        void OnSplit(InputAction.CallbackContext context);
        void OnDrop(InputAction.CallbackContext context);
        void OnHotbarSelect(InputAction.CallbackContext context);
        void OnInteractSwitch(InputAction.CallbackContext context);
        void OnInteractPerform(InputAction.CallbackContext context);
        void OnStopInteract(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAimPos(InputAction.CallbackContext context);
    }
}
